const fs = require("fs");
const path = require('path')



let 正则表达式汇总 = {
  中文: /[\u4E00-\u9FA5]*/g,
  用户名: /^[a-zA-Z0-9_-]{4,16}$/, //4到16位（字母，数字，下划线，减号）
  密码: /^.*(?=.{6,})(?=.*\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/, //密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符
  整数: {
    整数: /^-?\d+$/,
    正整数: /^\d+$/,
    负整数: /^-\d+$/,
  },
  数字: {
    正数: /^\d+\.?\d+$/,
    负数: /^-\d*\.?\d+$/,
    数字: /^-?\d*\.?\d+$/,
  },
  Email: /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/,// 5 Email正则
  手机号: /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\d{8}$/,// 6 手机号码正则
  身份证号: /^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/,//（18位）正则
  URL: /^((https?|ftp|file):\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/,//URL正则
  ipP: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,//ipv4地址正则
  cPattern: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,//RGB Hex颜色正则
  日期: /^\d{4}(\-)\d{1,2}\1\d{1,2}$/,//日期正则，简单判定,未做月份及日期的判定
  dP2: /^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/,//日期正则，复杂判定
  qqPattern: /^[1-9][0-9]{4,10}$/,//QQ号正则，5至11位
  微信号: /^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/,//微信号正则 6至20位，以字母开头，字母，数字，减号，下划线
  车牌号: /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/,//车牌号正则
  首位两端空格: /^\s+|\s+$/g,
  网页标签: /<([^>]+)>[^<]*<\/\1>/,//读取标签
  英文字幕去除: {
    汉字去除: {
      // /(\d{2,3}):\1:\1,\1.*\1:\1:\1,\1/
      pattern: /^.*[\u4E00-\u9FA5].*$/gm,
      replacement: '',
    },
    时间去除: {
      // /(\d{2,3}):\1:\1,\1.*\1:\1:\1,\1/
      pattern: /\d{2}:\d{2}:\d{2},\d{3} --> \d{2}:\d{2}:\d{2},\d{3}/g,
      replacement: '',
    },
    单行数字去除: {
      // /(\d{2,3}):\1:\1,\1.*\1:\1:\1,\1/
      pattern: /^\d{1,5}$/gm,
      replacement: '',
    },
    去除多余空行: {
      pattern: /[\n\r]+/g,
      replacement: '\r',
    },
  },
};
var { a, b, c, d } = 正则表达式汇总.英文字幕去除
var { 汉字去除: { pattern1, replacement1 }, 时间去除: { pattern2, replacement2 }, 单行数字去除: { pattern3, replacement3 }, 去除多余空行: { pattern4, replacement4 } } = 正则表达式汇总.英文字幕去除
var obj = { pattern1: replacement1, pattern2: replacement2, pattern3: replacement3, pattern4: replacement4 }
console.log(a.pattern)


// console.log(
//   pattern.test('所有的和平 都需要伟大的牺牲')
// )

// let filePatj = path.join(__dirname, 'wode.srt')
// fs.readFile(filePatj, "utf-8", function (error, data) {
//   if (error) {
//     console.log(error);
//     return false
//   }

//   for (key in obj) {
//     data = data.replace(key, obj[key])
//   }

//   fs.writeFile(filePatj, data, 'utf-8', function (error) {
//     if (error) {
//       console.log(error);
//       return false;
//     }
//     console.log('写入成功');
//   })
//   console.log(data);
// });




